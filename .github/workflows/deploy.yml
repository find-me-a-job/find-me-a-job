name: Build and Deploy to DockerHub

on:
    push:
        branches:
            - main

jobs:
    backend:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        - name: Create containers
          run: docker build -t fmj-backend -f docker/Dockerfile.backend . 

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and Push Backend
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/fmj-backend:latest
            context: .
            file: docker/Dockerfile.backend

        - name: Pull on EC2 Machine
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USERNAME }}
            key: ${{ secrets.EC2_KEY }}
            script: |
              sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fmj-backend:latest
              sudo docker stop fmj-backend || true
              sudo docker rm fmj-backend || true
              sudo docker run -d --name fmj-backend -p 5000:5000 ${{ secrets.DOCKERHUB_USERNAME }}/fmj-backend:latest
    frontend:
        name: build frontend and deploy to cloudfront
        runs-on: ubuntu-latest
        env:
          BUCKET: findmeajob.info
          DIST: ./frontend/dist
          REGION: us-east-1
          DIST_ID: EAHXMXBVYXY3L

        steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: "Configure AWS Credentials"
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Install dependencies
          run: npm ci --production --prefix ./frontend

        - name: Install Type Declarations
          run: npm install --save-dev @types/react-router-dom @types/d3 --prefix ./frontend

        - name: Build
          run: npm run build --prefix ./frontend
        
        - name: Copy files to the aws bucket
          run: |
            aws s3 sync --delete ${{ env.DIST }} s3://${{ env.BUCKET }}

        - name: Copy files to the production website
          run: |
            aws cloudfront create-invalidation \
              --distribution-id ${{ env.DIST_ID }} \
              --paths "/*"